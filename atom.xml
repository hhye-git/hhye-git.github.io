<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不要香菜</title>
  
  <subtitle>紀錄一些leetcode心得</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-14T21:16:45.644Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>hhye225</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2001. Number of Pairs of Interchangeable Rectangles</title>
    <link href="http://example.com/2021/09/15/2001-Number-of-Pairs-of-Interchangeable-Rectangles/"/>
    <id>http://example.com/2021/09/15/2001-Number-of-Pairs-of-Interchangeable-Rectangles/</id>
    <published>2021-09-14T18:58:34.000Z</published>
    <updated>2021-09-14T21:16:45.644Z</updated>
    
    <content type="html"><![CDATA[<p>Leetcode Ranking of Weekly Contest 258<br><a href="https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/">2001. Number of Pairs of Interchangeable Rectangles</a><br>Difficulty: <font color=#FFD700>Medium</font></p><a id="more"></a><p>想法:<br>找出所有相同斜率之點後，計算共有幾種pair</p><p>注意事項:<br>    1. 因 1 &lt; n &lt; 1e5，故 n * n 可能會超過 1e9 故須使用long型別計算<br>    2. 不使用double型別，以避免精確度問題</p><p>方法1-1.<br>直接計算斜率後，將斜率存入HashMap</p><p>方法1-2.<br>不計算斜率，而是計算互質的分子分母對，並存入HashMap<br>由於Java原生無Pair Class可用，自己重寫需要Override hash及equals函數<br>替代方案為將pair對轉成字串作為HashMap的key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">interchangeableRectangles</span><span class="params">(<span class="keyword">int</span>[][] rectangles)</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> count = <span class="number">0</span>;</span><br><span class="line">HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>[] rectangle : rectangles) &#123;</span><br><span class="line"><span class="keyword">int</span> gcd = BigInteger.valueOf(rectangle[<span class="number">0</span>]).gcd(BigInteger.valueOf(rectangle[<span class="number">1</span>])).intValue();</span><br><span class="line">String key = rectangle[<span class="number">0</span>] / gcd + <span class="string">&quot; &quot;</span> + rectangle[<span class="number">1</span>] / gcd;</span><br><span class="line">count += map.getOrDefault(key, <span class="number">0</span>);</span><br><span class="line">map.put(key, <span class="number">1</span> + map.getOrDefault(key, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法2.<br>重寫Comparator比較斜率，斜率較小者排前面，較大者排後面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">interchangeableRectangles</span><span class="params">(<span class="keyword">int</span>[][] rectangles)</span> </span>&#123;</span><br><span class="line">Comparator&lt;<span class="keyword">int</span>[]&gt; c = <span class="keyword">new</span> Comparator&lt;<span class="keyword">int</span>[]&gt;()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span>[] b)</span></span>&#123;            </span><br><span class="line"><span class="keyword">return</span> Long.compare((<span class="keyword">long</span>)a[<span class="number">0</span>] * b[<span class="number">1</span>], (<span class="keyword">long</span>)b[<span class="number">0</span>] * a[<span class="number">1</span>]); <span class="comment">//注意事項1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">Arrays.sort(rectangles, c);</span><br><span class="line"><span class="keyword">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rectangles.length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i != rectangles.length-<span class="number">1</span> &amp;&amp; c.compare(rectangles[i], rectangles[i+<span class="number">1</span>]) == <span class="number">0</span>)&#123;</span><br><span class="line">times++;</span><br><span class="line">ans += times;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">times = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Leetcode Ranking of Weekly Contest 258&lt;br&gt;&lt;a href=&quot;https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/&quot;&gt;2001. Number of Pairs of Interchangeable Rectangles&lt;/a&gt;&lt;br&gt;Difficulty: &lt;font color=#FFD700&gt;Medium&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Leetcode" scheme="http://example.com/categories/Leetcode/"/>
    
    
    <category term="Leetcode" scheme="http://example.com/tags/Leetcode/"/>
    
    <category term="Weekly contests" scheme="http://example.com/tags/Weekly-contests/"/>
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
